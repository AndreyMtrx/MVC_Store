@model MVC_Store.Models.ViewModels.Pages.PageViewModel
@{
    ViewBag.Title = "Edit page";
}

<h2 class="admin_page-title">Edit page</h2>
@if (TempData["SM"] != null)
{
    <div class="alert alert-success">
        @TempData["SM"]
    </div>
}
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label" })
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control col-md-6" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.Slug, new { @class = "control-label" })
            @if (Model.Slug == "home")
            {
                @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control col-md-6", @readonly = "readonly" } })
            }
            else
            {
                @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control col-md-6" } })
            }
            @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Body, new { @class = "control-label" })
            @Html.TextAreaFor(model => model.Body, new { @class = "form-control col-md-6" })
            @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <div class="custom-control custom-checkbox">
                @Html.EditorFor(model => model.HasSidebar, new { htmlAttributes = new { @class = "form-control custom-control-input" } })
                @Html.LabelFor(model => model.HasSidebar, new { @class = "custom-control-label" })
            </div>
            @Html.ValidationMessageFor(model => model.HasSidebar, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <input type="submit" value="Edit page" class="btn btn-success" />
    </div>
}

<div class="mt-5 back__btn">
    @Html.ActionLink("Back to pages", "Index", "", new { @class = "btn btn-primary" })
    <img src="~/Content/img/left-pointing-arrow.svg" class="back__arrow" />
</div>

@section Scripts
{
    <script>
        CKEDITOR.replace("Body");
    </script>
}