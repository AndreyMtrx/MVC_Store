@model MVC_Store.Models.ViewModels.Account.LoginUserViewModel

@{
    ViewBag.Title = "Login";
}

<h2 class="mb-4 mt-2">Login</h2>
<hr class="mb-3" />
@if (TempData["SM"] != null)
{
    <div class="alert alert-success">@TempData["SM"]</div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control col-md-4" } })
        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
        @Html.PasswordFor(model => model.Password, new { @class = "form-control col-md-4" })
        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <div class="custom-control custom-checkbox">
            @Html.EditorFor(model => model.RememberMe, new { htmlAttributes = new { @class = "custom-control-input" } })
            @Html.LabelFor(model => model.RememberMe, htmlAttributes: new { @class = "custom-control-label" })
        </div>
        @Html.ValidationMessageFor(model => model.RememberMe, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <input type="submit" value="Log in" class="btn btn-success mt-3" />
        </div>
        <a class="d-block" href="/account/create-account">Still don't have an account? Create it now</a>
    </div>
    }
